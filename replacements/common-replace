# This file contains a list of replacements for both the "check" script and the "learn" script.
# Create your own site-specific replacements and merge them with the "replace" script.  See site-install for examples.
# Generate GUIDs with uuidgen.

# start 4c02f3dc-1640-11ed-baa4-1511ebd0a2d1
enable_tput=0
if tput sgr0; then
	enable_tput=1
fi
# end 4c02f3dc-1640-11ed-baa4-1511ebd0a2d1

# start ffa9e74e-2b02-4d72-9c82-9f9db2915c62
LUS_PROGRESS=${LUS_PROGRESS:-"$HOME/.learnUnixScripts"}

if [ "${enable_tput}" == "1" ]; then
	black_on_white="$(tput setab 7)$(tput setaf 0)"
	bright_white_on_black="$(tput setab 0)$(tput setaf 7)$(tput bold)"
	yellow_on_black="$(tput setab 0)$(tput setaf 3)$(tput bold)"
	green_on_black="$(tput setab 0)$(tput setaf 2)$(tput bold)"
	blue_on_black="$(tput setab 0)$(tput setaf 4)$(tput bold)"
	red_on_black="$(tput setab 0)$(tput setaf 1)$(tput bold)"

	underline="\033[4m"
	no_underline="\033[m"

	nc=$(tput sgr0) # No colour
else
	black_on_white=""
	bright_white_on_black=""
	yellow_on_black=""
	green_on_black=""
	blue_on_black=""
	red_on_black=""

	underline=""
	no_underline=""

	nc="" # No colour
fi

# Use an associative array to make it easy to reorder the exercises and add more in the middle.
i=1
declare -A exercises
exercises["white_belt_$((i++))"]="what_execute_means"
exercises["white_belt_$((i++))"]="stuck"
exercises["white_belt_$((i++))"]="cd_root"
exercises["white_belt_$((i++))"]="ls_root"
exercises["white_belt_$((i++))"]="common_root_directories"
exercises["white_belt_$((i++))"]="frozen"
exercises["white_belt_$((i++))"]="set"
exercises["white_belt_$((i++))"]="set_more"
exercises["white_belt_$((i++))"]="set_less"
exercises["white_belt_$((i++))"]="path_and_sourcing"

i=1
exercises["yellow_stripe_$((i++))"]="pwd"
exercises["yellow_stripe_$((i++))"]="cd_dot_dot"
exercises["yellow_stripe_$((i++))"]="no_news_is_good_news"
exercises["yellow_stripe_$((i++))"]="mkdir_and_relative_paths"
exercises["yellow_stripe_$((i++))"]="rmdir"
exercises["yellow_stripe_$((i++))"]="special_characters"
exercises["yellow_stripe_$((i++))"]="file"
exercises["yellow_stripe_$((i++))"]="cat_less"
exercises["yellow_stripe_$((i++))"]="quotes"
exercises["yellow_stripe_$((i++))"]="escaping_quotes"
exercises["yellow_stripe_$((i++))"]="quote_finale"

i=1
exercises["yellow_belt_$((i++))"]="speed_and_lists"
exercises["yellow_belt_$((i++))"]="unquoted_tab_completion"
exercises["yellow_belt_$((i++))"]="unquoted_tab_completion_two_options"
exercises["yellow_belt_$((i++))"]="quoted_tab_completion"
exercises["yellow_belt_$((i++))"]="tab_is_context_sensitive"
exercises["yellow_belt_$((i++))"]="up"
exercises["yellow_belt_$((i++))"]="home_end_and_pound"
exercises["yellow_belt_$((i++))"]="ctrl_r"
exercises["yellow_belt_$((i++))"]="history_bang"

i=1
exercises["green_stripe_$((i++))"]="command_line_options"
exercises["green_stripe_$((i++))"]="ls"
exercises["green_stripe_$((i++))"]="ls_dash_l"
exercises["green_stripe_$((i++))"]="ls_explore"
exercises["green_stripe_$((i++))"]="ls_dash_h"
exercises["green_stripe_$((i++))"]="ls_dash_f"
exercises["green_stripe_$((i++))"]="df"
exercises["green_stripe_$((i++))"]="midterm_exam"
exercises["green_stripe_$((i++))"]="dev_and_mount"

i=1
exercises["green_belt_$((i++))"]="ctrl_c"
exercises["green_belt_$((i++))"]="hidden_files"

declare -A belt_to_number
belt_to_number["white_belt"]=0
belt_to_number["yellow_stripe"]=1
belt_to_number["yellow_belt"]=2
belt_to_number["green_stripe"]=3
belt_to_number["green_belt"]=4
belt_to_number["blue_stripe"]=5
belt_to_number["blue_belt"]=6
belt_to_number["red_stripe"]=7
belt_to_number["red_belt"]=8
belt_to_number["black_stripe"]=9
belt_to_number["black_belt"]=10

declare -A number_to_belt
number_to_belt[0]="white_belt"
number_to_belt[1]="yellow_stripe"
number_to_belt[2]="yellow_belt"
number_to_belt[3]="green_stripe"
number_to_belt[4]="green_belt"
number_to_belt[5]="blue_stripe"
number_to_belt[6]="blue_belt"
number_to_belt[7]="red_stripe"
number_to_belt[8]="red_belt"
number_to_belt[9]="black_stripe"
number_to_belt[10]="black_belt"

declare -A belt_to_first_text
belt_to_first_text["white_belt"]="White"
belt_to_first_text["yellow_stripe"]="Yellow"
belt_to_first_text["yellow_belt"]="Yellow"
belt_to_first_text["green_stripe"]="Green"
belt_to_first_text["green_belt"]="Green"
belt_to_first_text["blue_stripe"]="Blue"
belt_to_first_text["blue_belt"]="Blue"
belt_to_first_text["red_stripe"]="Red"
belt_to_first_text["red_belt"]="Red"
belt_to_first_text["black_stripe"]="Black"
belt_to_first_text["black_belt"]="Black"

declare -A belt_to_second_text
belt_to_second_text["white_belt"]="Belt"
belt_to_second_text["yellow_stripe"]="Stripe"
belt_to_second_text["yellow_belt"]="Belt"
belt_to_second_text["green_stripe"]="Stripe"
belt_to_second_text["green_belt"]="Belt"
belt_to_second_text["blue_stripe"]="Stripe"
belt_to_second_text["blue_belt"]="Belt"
belt_to_second_text["red_stripe"]="Stripe"
belt_to_second_text["red_belt"]="Belt"
belt_to_second_text["black_stripe"]="Stripe"
belt_to_second_text["black_belt"]="Belt"

declare -A belt_to_first_colour_dark
belt_to_first_colour_dark["white_belt"]="${bright_white_on_black}"
belt_to_first_colour_dark["yellow_stripe"]="${yellow_on_black}"
belt_to_first_colour_dark["yellow_belt"]="${yellow_on_black}"
belt_to_first_colour_dark["green_stripe"]="${green_on_black}"
belt_to_first_colour_dark["green_belt"]="${green_on_black}"
belt_to_first_colour_dark["blue_stripe"]="${blue_on_black}"
belt_to_first_colour_dark["blue_belt"]="${blue_on_black}"
belt_to_first_colour_dark["red_stripe"]="${red_on_black}"
belt_to_first_colour_dark["red_belt"]="${red_on_black}"
belt_to_first_colour_dark["black_stripe"]="${black_on_white}"
belt_to_first_colour_dark["black_belt"]="${black_on_white}"

declare -A belt_to_first_colour_light
if [ "${enable_tput}" == "1" ]; then
	belt_to_first_colour_light["white_belt"]="$(tput setaf 7)$(tput bold)"
	belt_to_first_colour_light["yellow_stripe"]="$(tput setaf 3)$(tput bold)"
	belt_to_first_colour_light["yellow_belt"]="$(tput setaf 3)$(tput bold)"
	belt_to_first_colour_light["green_stripe"]="$(tput setaf 2)$(tput bold)"
	belt_to_first_colour_light["green_belt"]="$(tput setaf 2)$(tput bold)"
	belt_to_first_colour_light["blue_stripe"]="$(tput setaf 4)$(tput bold)"
	belt_to_first_colour_light["blue_belt"]="$(tput setaf 4)$(tput bold)"
	belt_to_first_colour_light["red_stripe"]="$(tput setaf 1)$(tput bold)"
	belt_to_first_colour_light["red_belt"]="$(tput setaf 1)$(tput bold)"
	belt_to_first_colour_light["black_stripe"]="$(tput setaf 15)$(tput setab 0)$(tput bold)"
	belt_to_first_colour_light["black_belt"]="$(tput setaf 15)$(tput setab 0)$(tput bold)"
else
	belt_to_first_colour_light["white_belt"]=""
	belt_to_first_colour_light["yellow_stripe"]=""
	belt_to_first_colour_light["yellow_belt"]=""
	belt_to_first_colour_light["green_stripe"]=""
	belt_to_first_colour_light["green_belt"]=""
	belt_to_first_colour_light["blue_stripe"]=""
	belt_to_first_colour_light["blue_belt"]=""
	belt_to_first_colour_light["red_stripe"]=""
	belt_to_first_colour_light["red_belt"]=""
	belt_to_first_colour_light["black_stripe"]=""
	belt_to_first_colour_light["black_belt"]=""
fi

# Some extra ${nc}s are added to fix an issue with PuTTY.
declare -A belt_to_second_colour_dark
if [ "${enable_tput}" == "1" ]; then
	belt_to_second_colour_dark["white_belt"]=""
	belt_to_second_colour_dark["yellow_stripe"]="${nc}${bright_white_on_black}"
	belt_to_second_colour_dark["yellow_belt"]=""
	belt_to_second_colour_dark["green_stripe"]="${yellow_on_black}"
	belt_to_second_colour_dark["green_belt"]=""
	belt_to_second_colour_dark["blue_stripe"]="${green_on_black}"
	belt_to_second_colour_dark["blue_belt"]=""
	belt_to_second_colour_dark["red_stripe"]="${blue_on_black}"
	belt_to_second_colour_dark["red_belt"]=""
	belt_to_second_colour_dark["black_stripe"]="${red_on_black}"
	belt_to_second_colour_dark["black_belt"]=""
else
	belt_to_second_colour_dark["white_belt"]=""
	belt_to_second_colour_dark["yellow_stripe"]=""
	belt_to_second_colour_dark["yellow_belt"]=""
	belt_to_second_colour_dark["green_stripe"]=""
	belt_to_second_colour_dark["green_belt"]=""
	belt_to_second_colour_dark["blue_stripe"]=""
	belt_to_second_colour_dark["blue_belt"]=""
	belt_to_second_colour_dark["red_stripe"]=""
	belt_to_second_colour_dark["red_belt"]=""
	belt_to_second_colour_dark["black_stripe"]=""
	belt_to_second_colour_dark["black_belt"]=""
fi

# Some extra ${nc}s are added to fix an issue with PuTTY.
declare -A belt_to_second_colour_light
if [ "${enable_tput}" == "1" ]; then
	belt_to_second_colour_light["white_belt"]=""
	belt_to_second_colour_light["yellow_stripe"]="${nc}$(tput setaf 7)$(tput bold)"
	belt_to_second_colour_light["yellow_belt"]=""
	belt_to_second_colour_light["green_stripe"]="$(tput setaf 3)"
	belt_to_second_colour_light["green_belt"]=""
	belt_to_second_colour_light["blue_stripe"]="$(tput setaf 2)"
	belt_to_second_colour_light["blue_belt"]=""
	belt_to_second_colour_light["red_stripe"]="$(tput setaf 4)"
	belt_to_second_colour_light["red_belt"]=""
	belt_to_second_colour_light["black_stripe"]="${red_on_black}"
	belt_to_second_colour_light["black_belt"]=""
else
	belt_to_second_colour_light["white_belt"]=""
	belt_to_second_colour_light["yellow_stripe"]=""
	belt_to_second_colour_light["yellow_belt"]=""
	belt_to_second_colour_light["green_stripe"]=""
	belt_to_second_colour_light["green_belt"]=""
	belt_to_second_colour_light["blue_stripe"]=""
	belt_to_second_colour_light["blue_belt"]=""
	belt_to_second_colour_light["red_stripe"]=""
	belt_to_second_colour_light["red_belt"]=""
	belt_to_second_colour_light["black_stripe"]=""
	belt_to_second_colour_light["black_belt"]=""
fi

# Resetting the colour here fixes issues with debugging (PS4='Line ${LINENO}: ' bash -x learn)
if [ "${enable_tput}" == "1" ]; then
	reset_colour=$(tput sgr0) # No colour
fi
# end ffa9e74e-2b02-4d72-9c82-9f9db2915c62

# start bef71a69-5f8d-43d4-af29-60608e9b56c7
file_clean_up_array=()

clean_up() {
	if [ -n "${file_clean_up_array:-}" ]; then
		for item in $file_clean_up_array; do
			rm -f $item
		done
	fi
}

# It's a trap!  Run the clean_up subroutine on normal or aborted exit.
trap clean_up EXIT
# end bef71a69-5f8d-43d4-af29-60608e9b56c7

# start 37333148-8746-4468-826e-544e532f1ebc
getNextBelt() {
	echo ${number_to_belt[$(expr 1 + ${belt_to_number[$1]})]}
}

getBeltWithColours() {
	first_text=${belt_to_first_text[$1]}
	second_text=${belt_to_second_text[$1]}

	if [[ "${2:-}" != "title" ]]; then
		first_text="${first_text,,}"
		second_text="${second_text,,}"
	fi

	if [[ "${DARK_MODE:-1}" -eq "1" ]]; then
		echo ${belt_to_first_colour_dark[$1]}${first_text} ${belt_to_second_colour_dark[$1]}${second_text}${nc}
	else
		echo ${belt_to_first_colour_light[$1]}${first_text} ${belt_to_second_colour_light[$1]}${second_text}${nc}
	fi
}

make_temp_progress() {
	set +e
	progress_file=$(mktemp --suffix_$(whoami) 2>/dev/null)
	RESULT=$?
	if [ $RESULT -ne 0 ]; then
		progress_file=$(mktemp -t $(whoami)-XXXXXX)
	fi
	set -e
}

updateDotFile() {
	if [ ! -f "${LUS_PROGRESS}" ]; then
		echo "RANK=$RANK" > "${LUS_PROGRESS}"
		echo "EXERCISE=$EXERCISE" >> "${LUS_PROGRESS}"
	else
		make_temp_progress
		file_clean_up_array+=($progress_file)

		echo "RANK=${RANK}" >> "${progress_file}"
		echo "EXERCISE=${EXERCISE}" >> "${progress_file}"
		echo "SAVED_RANK=${SAVED_RANK:-}" >> "${progress_file}"
		echo "SAVED_EXERCISE=${SAVED_EXERCISE:-}" >> "${progress_file}"

		# Leave the temp file to be cleaned up by the trap.
		cp "${progress_file}" "${LUS_PROGRESS}"
	fi	
}

trim() {
	# remove leading whitespace characters
	temp="${1#"${1%%[![:space:]]*}"}"
	# remove trailing whitespace characters
	temp="${temp%"${temp##*[![:space:]]}"}"   
	echo "$temp"
}

# The shell does all the work of removing the extra spaces.  It only works with one argument.
simple_trim() {
	echo "$1"
}
# end 37333148-8746-4468-826e-544e532f1ebc

# start dbfb406a-b3c4-4c8d-84f3-4f54bef5d50e
make_temp() {
	umask 077
	set +e
	fmt_file=$(mktemp --suffix_$(whoami) 2>/dev/null)
	RESULT=$?
	if [ $RESULT -ne 0 ]; then
		fmt_file=$(mktemp -t $(whoami)-XXXXXX)
	fi
	set -e
}
# end dbfb406a-b3c4-4c8d-84f3-4f54bef5d50e

# start 7437f7c8-c360-4f96-91f6-b75dcd3b8cd7
# If someone is connecting to Docker with "xterm", it's pretty much guaranteed to be a modern one.
# By setting 256 colours, we can give tput more to work with.
if [[ "${INSIDE_DOCKER:-0}" == "1" ]] && [[ "$TERM" == "xterm" ]]; then
	TERM=xterm-256color
fi
# end 7437f7c8-c360-4f96-91f6-b75dcd3b8cd7

# start 1a88ef09-bbc8-4f7e-ac03-a1849fd03166
if stty --version 2>&1 | grep -q 'version'; then
    # BusyBox and other streamlined systems don't support --version.
    stty_options='-a'
else
    if stty --version 2>/dev/null | grep -q 'coreutils'; then
        stty_options='-a'
    else
        stty_options='everything'
    fi
fi
# end 1a88ef09-bbc8-4f7e-ac03-a1849fd03166
