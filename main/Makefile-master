.PHONY: clean dist distclean install configure run replacetarget nonreplace

include config.status

nonreplacescripts = there-yet df-20 df-40

run: configure

flags/configuretarget:
	./configure

configure: flags/configuretarget

replace: flags/configuretarget flags/replacetarget

clean: gitclean
	rm -f main/dist/bin/*
	rm -f flags/replacetarget
	rm -f main/replace
	rm -f Makefile
	rm -f main/docker/Makefile 
	rm -f config.status
	rm -f main/docker/config.status
	rm -f main/docker/flags/buildtarget
	rm -f main/docker/flags/volumetarget
	@echo
	@echo "Run the ./configure script to create the Makefile."

gitclean:
	rm -f flags/configuretarget

scripts = main/master-scripts/learn-master main/master-scripts/checkmain-master main/master-scripts/check-master
replaced_scripts = main/dist/bin/learn main/dist/bin/checkmain main/dist/bin/check

flags/replacetarget: $(scripts) main/replacements/* flags/configuretarget
	main/replace-all
	touch flags/replacetarget
	@echo "Scripts prepared in ./main/dist/bin."

replacetarget: flags/replacetarget

main/docker/bin/%: main/dist/bin/%
	cp main/dist/bin/$* main/docker/bin/$*

dockerinstall: flags/replacetarget nonreplace nonreplacedocker main/docker/bin/*

main/dist/bin/%: main/master-scripts/%
	cp main/master-scripts/$* main/dist/bin/$*

# Copy the scripts that don't need replacement to main/dist/bin
nonreplace: $(addprefix main/dist/bin/,$(nonreplacescripts))

main/dist/bin/bobtheundying: main/master-scripts/bobtheundying.c
	gcc main/master-scripts/bobtheundying.c -o main/dist/bin/bobtheundying

nonreplacedocker: main/docker/bin/there-yet main/docker/bin/df-20 main/docker/bin/df-40 main/docker/bin/bobtheundying.c

# If none of the files already exist, we don't have to worry about overwriting anything.
# If all the files exist, assume we previously installed this project.
# If some exist, perhaps one or more of the files are from a different project:  don't overwrite.
install: flags/replacetarget nonreplace
	@# Quotes around the install path are already added by the configure script.
	@install_path="${INSTALL_PATH}" ; \
	install_files="$(replaced_scripts) $(addprefix main/dist/bin/,$(nonreplacescripts))" ; \
	existing_count=0 ; \
	total_files=0 ; \
	files_to_delete="" ; \
	for f in $$install_files ; do \
	    base_name=$$(basename $$f) ; \
	    total_files=$$(expr $$total_files + 1) ; \
	    if [ -f "$$install_path/$$base_name" ] ; then \
	        existing_count=$$(expr $$existing_count + 1) ; \
	        files_to_delete="$$files_to_delete $$install_path/$$base_name" ; \
	    fi ; \
	done ; \
	if [ $$existing_count -eq 0 ] ; then \
	    echo "No existing files found. Performing a clean installation." ; \
	    cp main/dist/bin/* "$$install_path" ; \
	elif [ $$existing_count -eq $$total_files ] ; then \
	    echo "All files already exist in $$install_path. Overwriting existing installation." ; \
	    cp main/dist/bin/* "$$install_path" ; \
	else \
	    echo "ERROR: Installation aborted. A partial installation was detected." ; \
	    echo "The following files already exist in $$install_path and conflict with the new installation:" ; \
	    for ef in $$files_to_delete ; do \
	        echo "  - $$ef" ; \
	    done ; \
	    echo "Please delete these files manually or run 'make clean-install' (if such a target existed) to proceed." ; \
	    exit 1 ; \
	fi

dockerrun: dockerinstall
	cd main/docker && make createuservolume
	cd main/docker && make run

dist:
	mkdir -p dist
	zip dist/learn-unix-scripts-dist.zip main/dist/bin/learn main/dist/bin/check main/dist/bin/checkmain LICENSE dist-readme
	tar czvf dist/learn-unix-scripts-dist.tar.gz main/dist/bin/learn main/dist/bin/check main/dist/bin/checkmain LICENSE dist-readme

distclean:
	rm -Rf dist
